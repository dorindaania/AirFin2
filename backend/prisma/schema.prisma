generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model accounts {
  id             String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id        String?        @db.Uuid
  account_type   String?        @db.VarChar(50)
  account_name   String?        @db.VarChar(255)
  account_number String?        @db.VarChar(255)
  access_token   String?
  refresh_token  String?
  provider       String?        @db.VarChar(255)
  last_synced_at DateTime?      @default(now()) @db.Timestamp(6)
  created_at     DateTime?      @default(now()) @db.Timestamp(6)
  is_default     Boolean        @default(false)
  users          users?         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  transactions   transactions[]
}

model budgets {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String?   @db.Uuid
  category      String?   @db.VarChar(50)
  budget_amount Decimal?  @db.Decimal
  spent_amount  Decimal?  @default(0) @db.Decimal
  start_date    DateTime? @db.Date
  end_date      DateTime? @db.Date
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  users         users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model goals {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id        String?   @db.Uuid
  goal_name      String?   @db.VarChar(255)
  target_amount  Decimal?  @db.Decimal
  current_amount Decimal?  @default(0) @db.Decimal
  deadline       DateTime? @db.Date
  status         String?   @default("in-progress") @db.VarChar(50)
  created_at     DateTime? @default(now()) @db.Timestamp(6)
  users          users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model settings {
  id                       String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                  String?   @db.Uuid
  preferred_currency       String?   @db.VarChar(10)
  notification_preferences Json?
  auto_sync                Boolean?  @default(true)
  created_at               DateTime? @default(now()) @db.Timestamp(6)
  users                    users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model transactions {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id          String?   @db.Uuid
  account_id       String?   @db.Uuid
  transaction_type String?   @db.VarChar(50)
  amount           Decimal?  @db.Decimal
  currency         String?   @db.VarChar(10)
  category         String?   @db.VarChar(50)
  description      String?
  reference        String?   @db.VarChar(255)
  transaction_date DateTime? @db.Timestamp(6)
  created_at       DateTime? @default(now()) @db.Timestamp(6)
  accounts         accounts? @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users            users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id              String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  clerk_id        String?        @unique @db.VarChar(255)
  email           String?        @unique @db.VarChar(255)
  full_name       String?        @db.VarChar(255)
  profile_picture String?        @db.VarChar(255)
  created_at      DateTime?      @default(now()) @db.Timestamp(6)
  accounts        accounts[]
  budgets         budgets[]
  goals           goals[]
  settings        settings[]
  transactions    transactions[]
}
